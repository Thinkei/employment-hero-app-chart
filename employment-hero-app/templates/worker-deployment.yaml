{{- $top_scope := . -}}
{{- if .Values.app.workers }}
{{- $worker_app_name := (printf "%s-worker" .Values.app.name) -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ $worker_app_name }}
  labels:
    app: {{ $worker_app_name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ default 1 .Values.config.replicas }}
  selector:
    matchLabels:
      app: {{ $worker_app_name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Chart.Name "/templates/secret.yaml") . | sha256sum }}
      labels:
        app: {{ $worker_app_name }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      terminationGracePeriodSeconds: {{ default 60 .Values.config.terminationGracePeriodSeconds }}
      {{- if .Values.files }}
      volumes:
      - name: "kubestore"
        secret:
          secretName: "{{ .Values.app.name }}-files"
      {{- end }}
      containers:
      {{- range $worker_name, $worker_command := .Values.app.workers }}
      {{- if $worker_command }}
      - name: {{ $worker_name }}
        {{- include "command_labels" $worker_command | indent 8 }}
        {{- include "image_labels" $top_scope | indent 8 }}
        {{- include "env_labels" $top_scope | indent 8 }}
        {{- if eq $worker_name "rpc" }}
        ports:
        - containerPort: {{ default 50051 $top_scope.Values.config.rpcPort }}
        {{- end }}
        {{- if $top_scope.Values.files }}
        volumeMounts:
        - name: "kubestore"
          mountPath: "/etc/kubestore"
          readOnly: true
        {{- end }}
      {{- end }}
      {{- end }}
{{- end }}
