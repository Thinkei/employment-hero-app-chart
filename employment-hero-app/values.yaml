# Kubernetes config
# Should not be updated once installed
config:
  # Path to private docker repo - required
  image_repo: private-registry.com/repo/path

  # resources request
  cpu_request: 10m
  memory_request: 20Mi

  # limit request
  cpu_limit: 100m
  memory_limit: 5G

  # deployment
  terminationGracePeriodSeconds: 60

# App info
app:
  # app name (you don't say?) - required
  name: app-name

  # app version - required
  version: 1.0.0

  # Uncomment if you want to add cron job containers
  # cron_jobs:
  #   say_hello:
  #     schedule: "*/1 * * * *"
  #     command: ["/bin/sh", "-c", "echo hello world \\($(date)\\)"]
  #   run_task_1:
  #     schedule: "*/1 * * * *"
  #     command: ["/bin/sh", "-c", "bundle exec rake eh:do_something"]
  #   run_task_2:
  #     schedule: "*/1 * * * *"
  #     command: ["bundle", "exec", "rake", "eh:do_something"]

  # Uncomment if you want to add web/rpc/worker containers and corresponding services
  # procs:
  # - name: main
  #   port: 80
  #   serviceType: ClusterIP
  #   command: ["bundle", "exec", "rails", "s"]
  #   host: main.host.com
  # - name: rpc
  #   port: 50051
  #   serviceType: LoadBalancer
  #   host: rpc.host.com
  #   command: ["bundle", "exec", "ruby", "grpc_server.rb"]
  # - name: worker
  #   command: ["bundle", "exec", "sidekiq"]

  job_deadline: 120 # 2 mins

  job_restart_policy: OnFailure

  # Uncomment if you want to add jobs to be executed at pre-install phase
  # pre_install:
  #   run-migration: ["bundle", "exec", "rake", "db:migrate"]

  # post_install:
  #   some-job: ["cleanup"]

  # pre_upgrade:
  #   run-migration: ["bundle", "exec", "rake", "db:migrate"]

  # post_upgrade:
  #   some-job: ["cleanup"]

  # pre_rollback:
  #   run-migration: ["bundle", "exec", "rake", "db:migrate"]

  # post_rollback:
  #   some-job: ["cleanup"]

# Environment
env:
  APP_ENV: staging

# Private files
# content must be base64-encoded
# all files will be mounted at /etc/kubestore
files:
  hello.txt: SGVsbG8=
